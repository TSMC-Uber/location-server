version: "3.4"
services:
  ws:
    image: ubuntu:latest
    user: ${UID}:${GID}
    volumes:
      - ../build/out/web_server:/app/web_server
    command: ./web_server
    working_dir: ${WORK_DIR}
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_QUEUE_NAME=${RABBITMQ_QUEUE_NAME}
      - RABBITMQ_EXCHANGE_NAME=${RABBITMQ_EXCHANGE_NAME}
      - RABBITMQ_ROUTING_KEY=${RABBITMQ_ROUTING_KEY}
    ports:
      - "8080:8080"
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_healthy
  mongo:
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD","mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
  redis:
    image: redis:latest
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "6379:6379"
  rabbitmq:
    build:
      context: rabbitmq
    restart: always
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5672:5672"
      - "15672:15672"